{"version":3,"sources":["Components/StartPage/StartPage.js","Components/Game/Card.js","Components/Game/Hand.js","Components/Game/DealersHand.js","Components/Game/Bet.js","assets/cards.js","Components/Game/Game.js","Components/Highscores/Highscores.js","Root/Root.js","index.js"],"names":["StartPage","state","name","ready","wrongName","handleInputChange","event","setState","target","value","handleSubmit","preventDefault","localStorage","setItem","getItem","JSON","stringify","score","this","to","className","onSubmit","type","onChange","Component","Card","props","Hand","cards","map","card","i","key","cardClass","DealersHand","Bet","bet","money","betLess","betMore","letsPlay","disabled","onClick","cardID","cardValue","Game","gameStarted","deck","playerCards","dealerCards","playerScore","dealerScore","playerWin","dealerWin","playerName","draw","finish","getRandomCards","setTimeout","getPlayerCard","getDealerCard","deckCards","length","randomIndex","Math","floor","random","push","splice","statesToSet","endGame","startNewGame","endRound","highscores","parse","Highscroes","sort","a","b","scores","Root","basename","path","exact","component","Highscores","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9ac5baa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass StartPage extends Component {\r\n  state = {\r\n    name: \"\",\r\n    ready: false,\r\n    wrongName: false\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name } = this.state;\r\n    if (!name) {\r\n      this.setState({ wrongName: true });\r\n    } else {\r\n      localStorage.setItem(\"name\", name);\r\n      this.setState({ ready: true, wrongName: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    localStorage.setItem(\"name\", \"\");\r\n\r\n    if (!localStorage.getItem(\"highscores\")) {\r\n      const highscores = [\r\n        { name: \"Jerry\", score: 1225 },\r\n        { name: \"Merry\", score: 1000 },\r\n        { name: \"Donald\", score: 225 },\r\n        { name: \"Alicia\", score: 50 }\r\n      ];\r\n      localStorage.setItem(\"highscores\", JSON.stringify(highscores));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, ready, wrongName } = this.state;\r\n\r\n    if (ready) {\r\n      return <Redirect to='/game' />;\r\n    }\r\n    return (\r\n      <div className='start-page row'>\r\n        <div className='col-md-12 col-xs-12'>\r\n          <h1>BlackJack</h1>\r\n        </div>\r\n        <div className='col-md-12 col-xs-12'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              <span className='input-header'>Nick:</span>\r\n              <input\r\n                type='text'\r\n                value={name}\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {wrongName ? (\r\n                <span className='validation-message'>Nick is required</span>\r\n              ) : null}\r\n            </label>\r\n\r\n            <input className='play-button' type='submit' value='Play' />\r\n          </form>\r\n        </div>\r\n        <div className='mx-auto'>\r\n          <Link to='/highscores'>\r\n            <button className='game-button'>Highscores</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\r\n\r\nconst Card = props => <div className={props.className}></div>;\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Hand = props => {\r\n  const cards = props.cards.map((card, i) => (\r\n    <Card key={i} className={card.cardClass} />\r\n  ));\r\n\r\n  return <div className='hand'>{cards}</div>;\r\n};\r\n\r\nexport default Hand;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst DealersHand = props => {\r\n  const { cards } = props;\r\n\r\n  return (\r\n    <div className='hand'>\r\n      {cards.map((card, i) => (\r\n        <Card key={i} className={card.cardClass} />\r\n      ))}\r\n      <Card\r\n        key='5'\r\n        className={cards[1] ? cards[1].cardClass : \"cards card-back\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DealersHand;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Bet = props => {\r\n  const { bet, money, betLess, betMore, letsPlay } = props;\r\n  return (\r\n    <div className='bet-container'>\r\n      <div>\r\n        <h3>Your money: {money}</h3>\r\n      </div>\r\n      <div>\r\n        <button className='game-button' disabled={bet === 5} onClick={betLess}>\r\n          -\r\n        </button>\r\n        <span className='bet'>{bet}</span>\r\n        <button\r\n          className='game-button'\r\n          disabled={bet >= 200 || bet === money}\r\n          onClick={betMore}>\r\n          +\r\n        </button>\r\n      </div>\r\n      <button className='game-button bet-button' onClick={letsPlay}>\r\n        Play\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bet;\r\n","const cards = [\r\n  {\r\n    cardID: \"9C\",\r\n    cardClass: \"cards card-9C\",\r\n    cardValue: 9\r\n  },\r\n  {\r\n    cardID: \"9D\",\r\n    cardClass: \"cards card-9D\",\r\n    cardValue: 9\r\n  },\r\n  {\r\n    cardID: \"9H\",\r\n    cardClass: \"cards card-9H\",\r\n    cardValue: 9\r\n  },\r\n  {\r\n    cardID: \"9S\",\r\n    cardClass: \"cards card-9S\",\r\n    cardValue: 9\r\n  },\r\n  {\r\n    cardID: \"10C\",\r\n    cardClass: \"cards card-10C\",\r\n    cardValue: 10\r\n  },\r\n  {\r\n    cardID: \"10D\",\r\n    cardClass: \"cards card-10D\",\r\n    cardValue: 10\r\n  },\r\n  {\r\n    cardID: \"10H\",\r\n    cardClass: \"cards card-10H\",\r\n    cardValue: 10\r\n  },\r\n  {\r\n    cardID: \"10S\",\r\n    cardClass: \"cards card-10S\",\r\n    cardValue: 10\r\n  },\r\n  {\r\n    cardID: \"JC\",\r\n    cardClass: \"cards card-JC\",\r\n    cardValue: 2\r\n  },\r\n  {\r\n    cardID: \"JD\",\r\n    cardClass: \"cards card-JD\",\r\n    cardValue: 2\r\n  },\r\n  {\r\n    cardID: \"JH\",\r\n    cardClass: \"cards card-JH\",\r\n    cardValue: 2\r\n  },\r\n  {\r\n    cardID: \"JS\",\r\n    cardClass: \"cards card-JS\",\r\n    cardValue: 2\r\n  },\r\n  {\r\n    cardID: \"QC\",\r\n    cardClass: \"cards card-QC\",\r\n    cardValue: 3\r\n  },\r\n  {\r\n    cardID: \"QD\",\r\n    cardClass: \"cards card-QD\",\r\n    cardValue: 3\r\n  },\r\n  {\r\n    cardID: \"QH\",\r\n    cardClass: \"cards card-QH\",\r\n    cardValue: 3\r\n  },\r\n  {\r\n    cardID: \"QS\",\r\n    cardClass: \"cards card-QS\",\r\n    cardValue: 3\r\n  },\r\n  {\r\n    cardID: \"KC\",\r\n    cardClass: \"cards card-KC\",\r\n    cardValue: 4\r\n  },\r\n  {\r\n    cardID: \"KD\",\r\n    cardClass: \"cards card-KD\",\r\n    cardValue: 4\r\n  },\r\n  {\r\n    cardID: \"KH\",\r\n    cardClass: \"cards card-KH\",\r\n    cardValue: 4\r\n  },\r\n  {\r\n    cardID: \"KS\",\r\n    cardClass: \"cards card-KS\",\r\n    cardValue: 4\r\n  },\r\n  {\r\n    cardID: \"AC\",\r\n    cardClass: \"cards card-AC\",\r\n    cardValue: 11\r\n  },\r\n  {\r\n    cardID: \"AD\",\r\n    cardClass: \"cards card-AD\",\r\n    cardValue: 11\r\n  },\r\n  {\r\n    cardID: \"AH\",\r\n    cardClass: \"cards card-AH\",\r\n    cardValue: 11\r\n  },\r\n  {\r\n    cardID: \"AS\",\r\n    cardClass: \"cards card-AS\",\r\n    cardValue: 11\r\n  }\r\n];\r\nexport default cards;\r\n","import React, { Component } from \"react\";\r\nimport Hand from \"./Hand\";\r\nimport DealersHand from \"./DealersHand\";\r\nimport Bet from \"./Bet\";\r\nimport cards from \"../../assets/cards\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    gameStarted: false,\r\n    bet: 5,\r\n    deck: [...cards],\r\n    playerCards: [],\r\n    dealerCards: [],\r\n    money: 100,\r\n    playerScore: 0,\r\n    dealerScore: 0,\r\n    playerWin: false,\r\n    dealerWin: false,\r\n    playerName: \"\",\r\n    draw: false,\r\n    finish: false\r\n  };\r\n\r\n  betLess = () => {\r\n    if (this.state.bet >= 1) {\r\n      this.setState(state => ({ bet: state.bet - 5 }));\r\n    }\r\n  };\r\n  betMore = () => {\r\n    if (this.state.bet <= this.state.money) {\r\n      this.setState(state => ({ bet: state.bet + 5 }));\r\n    }\r\n  };\r\n\r\n  letsPlay = () => {\r\n    this.setState({ gameStarted: true });\r\n  };\r\n\r\n  getRandomCards = () => {\r\n    for (let i = 0; i < 2; i++) {\r\n      setTimeout(this.getPlayerCard, 100);\r\n    }\r\n    this.getDealerCard();\r\n  };\r\n\r\n  getDealerCard = () => {\r\n    const { deck, dealerCards, playerScore, money, bet } = this.state;\r\n    let { dealerScore } = this.state;\r\n    const deckCards = deck.length > 0 ? deck : [...cards];\r\n\r\n    const randomIndex = Math.floor(Math.random() * deckCards.length);\r\n    dealerScore += deckCards[randomIndex].cardValue;\r\n    dealerCards.push(deckCards[randomIndex]);\r\n    deckCards.splice(randomIndex, 1);\r\n\r\n    const statesToSet = {\r\n      dealerScore: dealerScore,\r\n      dealerCards: dealerCards,\r\n      deck: deckCards,\r\n      bet: 5\r\n    };\r\n\r\n    if (dealerCards.length === 2) {\r\n      if (playerScore !== 21 && dealerScore < 15) {\r\n        const randomIndex = Math.floor(Math.random() * deckCards.length);\r\n        dealerScore += deckCards[randomIndex].cardValue;\r\n        dealerCards.push(deckCards[randomIndex]);\r\n        deckCards.splice(randomIndex, 1);\r\n        statesToSet.deck = deckCards;\r\n        statesToSet.dealerCards = dealerCards;\r\n        statesToSet.dealerScore = dealerScore;\r\n        this.setState(statesToSet);\r\n      }\r\n\r\n      if (dealerScore === playerScore && dealerScore < 21 && playerScore < 21) {\r\n        statesToSet.draw = true;\r\n        statesToSet.money = money + bet;\r\n      } else if (\r\n        playerScore === 21 ||\r\n        (dealerScore < playerScore && playerScore < 21) ||\r\n        (dealerScore > 21 && playerScore < 21)\r\n      ) {\r\n        statesToSet.playerWin = true;\r\n        statesToSet.money = money + bet * 2;\r\n      } else if (\r\n        dealerScore === 21 ||\r\n        (dealerScore > playerScore && dealerScore < 21) ||\r\n        playerScore > 21\r\n      ) {\r\n        statesToSet.dealerWin = true;\r\n        statesToSet.money = money - bet;\r\n      }\r\n    }\r\n\r\n    if (money === 0) {\r\n      this.endGame();\r\n    }\r\n    this.setState(statesToSet);\r\n  };\r\n\r\n  startNewGame = () => {\r\n    this.setState({\r\n      gameStarted: false,\r\n      deck: [],\r\n      playerCards: [],\r\n      dealerCards: [],\r\n      playerScore: 0,\r\n      dealerScore: 0,\r\n      playerWin: false,\r\n      dealerWin: false,\r\n      draw: false\r\n    });\r\n  };\r\n\r\n  getPlayerCard = () => {\r\n    const { deck, playerCards, bet } = this.state;\r\n    let { playerScore, playerWin, dealerWin, money } = this.state;\r\n    const deckCards = deck.length > 0 ? deck : [...cards];\r\n    const randomIndex = Math.floor(Math.random() * deckCards.length);\r\n    playerScore += deckCards[randomIndex].cardValue;\r\n    playerCards.push(deckCards[randomIndex]);\r\n    deckCards.splice(randomIndex, 1);\r\n    \r\n    if (playerScore === 21) {\r\n      playerWin = true;\r\n      money = money + bet * 2;\r\n    }\r\n    if (playerScore > 21) {\r\n      dealerWin = true;\r\n      money = money - bet;\r\n    }\r\n    this.setState({\r\n      deck: deckCards,\r\n      playerCards: playerCards,\r\n      playerScore: playerScore,\r\n      playerWin: playerWin,\r\n      dealerWin: dealerWin,\r\n      money: money\r\n    });\r\n  };\r\n\r\n  endRound = () => {\r\n    this.getDealerCard();\r\n  };\r\n\r\n  endGame = () => {\r\n    const { playerName, money } = this.state;\r\n    const highscores = JSON.parse(localStorage.getItem(\"highscores\"));\r\n    highscores.push({ name: playerName, score: money });\r\n    localStorage.setItem(\"highscores\", JSON.stringify(highscores));\r\n    this.setState({ finish: true });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRandomCards(4);\r\n    const playerName = localStorage.getItem(\"name\");\r\n    this.setState({ playerName: playerName });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.deck.length === 0) {\r\n      this.getRandomCards();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      gameStarted,\r\n      bet,\r\n      money,\r\n      playerName,\r\n      dealerScore,\r\n      playerScore,\r\n      dealerCards,\r\n      playerCards,\r\n      playerWin,\r\n      dealerWin,\r\n      draw,\r\n      finish\r\n    } = this.state;\r\n\r\n    if (finish) {\r\n      return <Redirect to='/highscores' />;\r\n    }\r\n    if (gameStarted) {\r\n      return (\r\n        <div className='col-md-12 col-xs-12'>\r\n          <DealersHand cards={dealerCards} />\r\n          <div className='panel'>\r\n            <h3>Dealer's score: {dealerScore}</h3>\r\n          </div>\r\n          <Hand cards={playerCards} />\r\n          {draw || playerWin || dealerWin ? (\r\n            <div className='game-status'>\r\n              {dealerWin ? <div className='info lose'>You lost.</div> : null}\r\n              {playerWin ? <div className='info win'> You won!</div> : null}\r\n              {draw ? <div className='info draw'>Draw.</div> : null}\r\n              <div>\r\n                <div className='buttons'>\r\n                  <button className='game-button' onClick={this.startNewGame}>\r\n                    Play again\r\n                  </button>\r\n                  <button className='game-button' onClick={this.endGame}>\r\n                    End game and save score\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div className='panel'>\r\n            <h3>Your score: {playerScore}</h3>\r\n          </div>\r\n          <div className='panel'>\r\n            <button\r\n              className='game-button'\r\n              onClick={this.getPlayerCard}\r\n              disabled={playerScore > 20 || playerWin || dealerWin || draw}>\r\n              Get card\r\n            </button>\r\n            <button\r\n              className='game-button'\r\n              onClick={this.endRound}\r\n              disabled={playerScore > 20 || playerWin || dealerWin || draw}>\r\n              End round\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Bet\r\n          bet={bet}\r\n          money={money}\r\n          betLess={this.betLess}\r\n          betMore={this.betMore}\r\n          letsPlay={this.letsPlay}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Highscroes extends Component {\r\n  state = {\r\n    highscores: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.highscores.length === 0) {\r\n      const highscores = JSON.parse(localStorage.getItem(\"highscores\"));\r\n      highscores.sort((a, b) => {\r\n        if (a.score > b.score) return -1;\r\n        if (b.score > a.score) return 1;\r\n\r\n        return 0;\r\n      });\r\n      this.setState({ highscores: highscores });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const scores = this.state.highscores.map((score, i) => (\r\n      <tr key={i}>\r\n        <td>{i + 1}</td>\r\n        <td>{score.name}</td>\r\n        <td>{score.score}</td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-12 text-center mt-5'>\r\n          <Link to='/'>\r\n            <button className='game-button'>Start Page</button>\r\n          </Link>\r\n        </div>\r\n        <div className='col-md-8 mx-auto mt-5 text-center'>\r\n          <div className='mb-3'>\r\n            <h2>Top 10</h2>\r\n          </div>\r\n\r\n          <table className='table table-striped table-dark'>\r\n            <thead>\r\n              <tr>\r\n                <th>Place</th>\r\n                <th>Nick</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{scores}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Highscroes;\r\n","import React from \"react\";\nimport \"../styles/index.scss\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport StartPage from \"../Components/StartPage/StartPage\";\nimport Game from \"../Components/Game/Game\";\nimport Highscores from \"../Components/Highscores/Highscores\";\n\nfunction Root() {\n  return (\n    <HashRouter basename='/'>\n      <Route path='/' exact component={StartPage} />\n      <Route path='/game' exact component={Game} />\n      <Route path='/highscores' exact component={Highscores} />\n    </HashRouter>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}